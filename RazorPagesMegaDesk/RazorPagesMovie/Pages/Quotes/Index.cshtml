@page

@model MegaDesk.Pages.Quotes.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h2>My Notes</h2>

<p>
    <a asp-page="Create">Add a Scripture</a>
</p>
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by Quote:
            <input type="text" name="SearchString" value="@Model.SearchString" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            Find by Keyword in Notes:
            <input type="text" name="KeySearchString" value="@Model.KeySearchString" />
            <input type="submit" value="SearchKey" class="btn btn-default" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>
<hr>
@*<form>
        <p>
            <select asp-for="Desk" asp-items="Model.Quote">
                <option value="">All</option>
            </select>
            Quote: <input type="text" name="SearchString" value="All">

            <input type="submit" value="Filter" />
        </p>
    </form>*@
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.QuoteSort" asp-route-SearchString="@Model.SearchString">@Html.DisplayNameFor(model => model.Desk[0].Quote)</a>

            </th>
            <th>
                @Html.DisplayNameFor(model => model.Desk[0].Chapter)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Desk[0].Verse)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Desk[0].Note)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort" asp-route-SearchString="@Model.SearchString">@Html.DisplayNameFor(model => model.Desk[0].DateAdded)</a>

            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Desk) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Quote)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Chapter)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Verse)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Note)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateAdded)
            </td>
            <td>

                <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.Desk.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Desk.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Desk.PageIndex - 1)"
   asp-route-currentFilter="@Model.SearchString"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Desk.PageIndex + 1)"
   asp-route-currentFilter="@Model.SearchString"
   class="btn btn-default @nextDisabled">
    Next
</a>
